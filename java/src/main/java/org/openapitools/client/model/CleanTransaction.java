/*
 * Haven Money API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.CleanCategory;
import org.openapitools.client.model.Merchant;
import org.threeten.bp.OffsetDateTime;

/**
 * CleanTransaction
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-10-01T14:12:58.255201-07:00[America/Los_Angeles]")
public class CleanTransaction {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private String account;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;

  public static final String SERIALIZED_NAME_RAW_MEMO = "rawMemo";
  @SerializedName(SERIALIZED_NAME_RAW_MEMO)
  private String rawMemo;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_USER_TRANSACTED_AT = "userTransactedAt";
  @SerializedName(SERIALIZED_NAME_USER_TRANSACTED_AT)
  private OffsetDateTime userTransactedAt;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<String> categories = new ArrayList<String>();

  public static final String SERIALIZED_NAME_CLEAN_CATEGORY = "cleanCategory";
  @SerializedName(SERIALIZED_NAME_CLEAN_CATEGORY)
  private CleanCategory cleanCategory;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_BACKGROUND_IMAGE = "backgroundImage";
  @SerializedName(SERIALIZED_NAME_BACKGROUND_IMAGE)
  private String backgroundImage;

  public static final String SERIALIZED_NAME_EXCLUDE_FROM_BREAKDOWNS = "excludeFromBreakdowns";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_FROM_BREAKDOWNS)
  private Boolean excludeFromBreakdowns;

  public static final String SERIALIZED_NAME_MERCHANT = "merchant";
  @SerializedName(SERIALIZED_NAME_MERCHANT)
  private String merchant;

  public static final String SERIALIZED_NAME_MERCHANT_DATA = "merchantData";
  @SerializedName(SERIALIZED_NAME_MERCHANT_DATA)
  private Merchant merchantData = null;

  public static final String SERIALIZED_NAME_MERCHANT_ADDRESS = "merchantAddress";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ADDRESS)
  private Address merchantAddress = null;

  public static final String SERIALIZED_NAME_HISTORICAL = "historical";
  @SerializedName(SERIALIZED_NAME_HISTORICAL)
  private List<String> historical = new ArrayList<String>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<String>();

  public CleanTransaction id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CleanTransaction account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }

  public CleanTransaction user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public CleanTransaction memo(String memo) {
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMemo() {
    return memo;
  }

  public void setMemo(String memo) {
    this.memo = memo;
  }

  public CleanTransaction rawMemo(String rawMemo) {
    this.rawMemo = rawMemo;
    return this;
  }

   /**
   * Get rawMemo
   * @return rawMemo
  **/
  @ApiModelProperty(required = true, value = "")
  public String getRawMemo() {
    return rawMemo;
  }

  public void setRawMemo(String rawMemo) {
    this.rawMemo = rawMemo;
  }

  public CleanTransaction network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(value = "")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  public CleanTransaction userTransactedAt(OffsetDateTime userTransactedAt) {
    this.userTransactedAt = userTransactedAt;
    return this;
  }

   /**
   * Get userTransactedAt
   * @return userTransactedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUserTransactedAt() {
    return userTransactedAt;
  }

  public void setUserTransactedAt(OffsetDateTime userTransactedAt) {
    this.userTransactedAt = userTransactedAt;
  }

  public CleanTransaction amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CleanTransaction categories(List<String> categories) {
    this.categories = categories;
    return this;
  }

  public CleanTransaction addCategoriesItem(String categoriesItem) {
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getCategories() {
    return categories;
  }

  public void setCategories(List<String> categories) {
    this.categories = categories;
  }

  public CleanTransaction cleanCategory(CleanCategory cleanCategory) {
    this.cleanCategory = cleanCategory;
    return this;
  }

   /**
   * Get cleanCategory
   * @return cleanCategory
  **/
  @ApiModelProperty(required = true, value = "")
  public CleanCategory getCleanCategory() {
    return cleanCategory;
  }

  public void setCleanCategory(CleanCategory cleanCategory) {
    this.cleanCategory = cleanCategory;
  }

  public CleanTransaction url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public CleanTransaction image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @ApiModelProperty(value = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public CleanTransaction backgroundImage(String backgroundImage) {
    this.backgroundImage = backgroundImage;
    return this;
  }

   /**
   * Get backgroundImage
   * @return backgroundImage
  **/
  @ApiModelProperty(value = "")
  public String getBackgroundImage() {
    return backgroundImage;
  }

  public void setBackgroundImage(String backgroundImage) {
    this.backgroundImage = backgroundImage;
  }

  public CleanTransaction excludeFromBreakdowns(Boolean excludeFromBreakdowns) {
    this.excludeFromBreakdowns = excludeFromBreakdowns;
    return this;
  }

   /**
   * Get excludeFromBreakdowns
   * @return excludeFromBreakdowns
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getExcludeFromBreakdowns() {
    return excludeFromBreakdowns;
  }

  public void setExcludeFromBreakdowns(Boolean excludeFromBreakdowns) {
    this.excludeFromBreakdowns = excludeFromBreakdowns;
  }

  public CleanTransaction merchant(String merchant) {
    this.merchant = merchant;
    return this;
  }

   /**
   * Get merchant
   * @return merchant
  **/
  @ApiModelProperty(value = "")
  public String getMerchant() {
    return merchant;
  }

  public void setMerchant(String merchant) {
    this.merchant = merchant;
  }

  public CleanTransaction merchantData(Merchant merchantData) {
    this.merchantData = merchantData;
    return this;
  }

   /**
   * Get merchantData
   * @return merchantData
  **/
  @ApiModelProperty(value = "")
  public Merchant getMerchantData() {
    return merchantData;
  }

  public void setMerchantData(Merchant merchantData) {
    this.merchantData = merchantData;
  }

  public CleanTransaction merchantAddress(Address merchantAddress) {
    this.merchantAddress = merchantAddress;
    return this;
  }

   /**
   * Get merchantAddress
   * @return merchantAddress
  **/
  @ApiModelProperty(value = "")
  public Address getMerchantAddress() {
    return merchantAddress;
  }

  public void setMerchantAddress(Address merchantAddress) {
    this.merchantAddress = merchantAddress;
  }

  public CleanTransaction historical(List<String> historical) {
    this.historical = historical;
    return this;
  }

  public CleanTransaction addHistoricalItem(String historicalItem) {
    this.historical.add(historicalItem);
    return this;
  }

   /**
   * Get historical
   * @return historical
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getHistorical() {
    return historical;
  }

  public void setHistorical(List<String> historical) {
    this.historical = historical;
  }

  public CleanTransaction tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public CleanTransaction addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CleanTransaction cleanTransaction = (CleanTransaction) o;
    return Objects.equals(this.id, cleanTransaction.id) &&
        Objects.equals(this.account, cleanTransaction.account) &&
        Objects.equals(this.user, cleanTransaction.user) &&
        Objects.equals(this.memo, cleanTransaction.memo) &&
        Objects.equals(this.rawMemo, cleanTransaction.rawMemo) &&
        Objects.equals(this.network, cleanTransaction.network) &&
        Objects.equals(this.userTransactedAt, cleanTransaction.userTransactedAt) &&
        Objects.equals(this.amount, cleanTransaction.amount) &&
        Objects.equals(this.categories, cleanTransaction.categories) &&
        Objects.equals(this.cleanCategory, cleanTransaction.cleanCategory) &&
        Objects.equals(this.url, cleanTransaction.url) &&
        Objects.equals(this.image, cleanTransaction.image) &&
        Objects.equals(this.backgroundImage, cleanTransaction.backgroundImage) &&
        Objects.equals(this.excludeFromBreakdowns, cleanTransaction.excludeFromBreakdowns) &&
        Objects.equals(this.merchant, cleanTransaction.merchant) &&
        Objects.equals(this.merchantData, cleanTransaction.merchantData) &&
        Objects.equals(this.merchantAddress, cleanTransaction.merchantAddress) &&
        Objects.equals(this.historical, cleanTransaction.historical) &&
        Objects.equals(this.tags, cleanTransaction.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, account, user, memo, rawMemo, network, userTransactedAt, amount, categories, cleanCategory, url, image, backgroundImage, excludeFromBreakdowns, merchant, merchantData, merchantAddress, historical, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CleanTransaction {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    rawMemo: ").append(toIndentedString(rawMemo)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    userTransactedAt: ").append(toIndentedString(userTransactedAt)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    cleanCategory: ").append(toIndentedString(cleanCategory)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    backgroundImage: ").append(toIndentedString(backgroundImage)).append("\n");
    sb.append("    excludeFromBreakdowns: ").append(toIndentedString(excludeFromBreakdowns)).append("\n");
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    merchantData: ").append(toIndentedString(merchantData)).append("\n");
    sb.append("    merchantAddress: ").append(toIndentedString(merchantAddress)).append("\n");
    sb.append("    historical: ").append(toIndentedString(historical)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

