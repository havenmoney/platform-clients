openapi: 3.0.1
info:
  title: Haven Money API
  version: "1.0"
servers:
- url: /
paths:
  /v1/accounts:
    put:
      operationId: upsertAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequestWrapper'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/accounts/user/{EndUserId}:
    get:
      operationId: getAccountsForUser
      parameters:
      - explode: false
        in: path
        name: EndUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/accounts/{AccountId}:
    delete:
      operationId: deleteAccount
      parameters:
      - explode: false
        in: path
        name: AccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/annotations/{TransactionId}:
    post:
      operationId: upsertUserAnnotation
      parameters:
      - explode: false
        in: path
        name: TransactionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAnnotationRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAnnotationResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/merchants/{MerchantId}:
    get:
      operationId: getMerchant
      parameters:
      - explode: false
        in: path
        name: MerchantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/tokens:
    post:
      operationId: createAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantServiceAccountAgentLoginRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantServiceAccountAgentLoginResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/transactions/batch:
    post:
      operationId: upsertBatchTransactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadBatchTransactionsRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/transactions/online:
    post:
      operationId: upsertOneTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CleanSingleTransactionRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CleanSingleTransactionResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/transactions/{EndUserId}:
    get:
      operationId: getTransactions
      parameters:
      - explode: false
        in: path
        name: EndUserId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: highWaterMark
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionsResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/transactions/{TransactionId}:
    delete:
      operationId: deleteTransaction
      parameters:
      - explode: false
        in: path
        name: TransactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/users/{EndUserId}:
    delete:
      operationId: deleteForUser
      parameters:
      - explode: false
        in: path
        name: EndUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/webhooks:
    get:
      operationId: getWebhooks
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhooksResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
    post:
      operationId: createWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWebhookResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
  /v1/webhooks/{WebhookId}:
    delete:
      operationId: deleteWebhook
      parameters:
      - explode: false
        in: path
        name: WebhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Conflict
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Server error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Rate limited
components:
  schemas:
    AccountRequestWrapper:
      example:
        account:
          institution: institution
          createdAt: 2000-01-23T04:56:07.000+00:00
          balance:
            current: current
            available: available
            limit: limit
          displayNameDetailed: displayNameDetailed
          displayName: displayName
          institutionName: institutionName
          id: id
          user: user
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        account:
          $ref: '#/components/schemas/AccountUpdate'
      required:
      - account
      type: object
    AccountSubType:
      enum:
      - AUTO
      - BROKERAGE
      - CASH_ISA
      - CASH_MANAGEMENT
      - CD
      - CHECKING
      - COMMERCIAL
      - CONSTRUCTION
      - CONSUMER
      - CREDIT
      - CREDIT_CARD
      - DEPOSITORY
      - EDUCATION_SAVINGS_ACCOUNT
      - GIC
      - HEALTH_REIMBURSEMENT_ARRANGEMENT
      - HOME
      - HOME_EQUITY
      - HSA
      - IRA
      - ISA
      - KEOGH
      - LIF
      - LINE_OF_CREDIT
      - LIRA
      - LOAN
      - LRIF
      - LRSP
      - MONEY_MARKET
      - MORTGAGE
      - MUTUAL_FUND
      - NON_TAXABLE_BROKERAGE_ACCOUNT
      - OTHER
      - OVERDRAFT
      - PAYPAL
      - PENSION
      - PREPAID
      - PRIF
      - PROFIT_SHARING_PLAN
      - RDSP
      - RECURRING
      - RESP
      - RETIREMENT
      - REWARDS
      - RLIF
      - ROTH
      - ROTH_401K
      - RRIF
      - RRSP
      - SAFE_DEPOSIT
      - SARSEP
      - SAVINGS
      - SEP_IRA
      - SIMPLE_IRA
      - SIPP
      - STOCK_PLAN
      - STUDENT
      - TFSA
      - THRIFT_SAVINGS_PLAN
      - T_401A
      - T_401K
      - T_403B
      - T_457B
      - T_529
      - UGMA
      - UTMA
      - VARIABLE_ANNUITY
      type: string
    AccountType:
      enum:
      - BROKERAGE
      - CREDIT
      - DEPOSITORY
      - LOAN
      - OTHER
      type: string
    AccountUpdate:
      example:
        institution: institution
        createdAt: 2000-01-23T04:56:07.000+00:00
        balance:
          current: current
          available: available
          limit: limit
        displayNameDetailed: displayNameDetailed
        displayName: displayName
        institutionName: institutionName
        id: id
        user: user
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        user:
          type: string
        displayName:
          type: string
        displayNameDetailed:
          type: string
        institution:
          type: string
        institutionName:
          type: string
        accountType:
          $ref: '#/components/schemas/AccountType'
        accountSubType:
          $ref: '#/components/schemas/AccountSubType'
        balance:
          $ref: '#/components/schemas/Balance'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - accountSubType
      - accountType
      - balance
      - createdAt
      - displayName
      - displayNameDetailed
      - id
      - institution
      - institutionName
      - updatedAt
      - user
      type: object
    AddAnnotationRequest:
      example:
        memo: memo
        excludeFromBreakdowns: true
      properties:
        category:
          $ref: '#/components/schemas/CleanCategory'
        memo:
          type: string
        excludeFromBreakdowns:
          type: boolean
        bootstrap:
          $ref: '#/components/schemas/BootstrapStrategy'
      required:
      - bootstrap
      type: object
    AddAnnotationResponse:
      example:
        transactions:
        - image: image
          amount: amount
          backgroundImage: backgroundImage
          memo: memo
          excludeFromBreakdowns: true
          merchant: merchant
          historical:
          - historical
          - historical
          merchantData:
            image: image
            hours:
              description: description
            twitter: twitter
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            phone: phone
            backgroundImage: backgroundImage
            facebook: facebook
            name: name
            yelp: yelp
            instagram: instagram
            url: url
          url: url
          network: network
          tags:
          - tags
          - tags
          userTransactedAt: 2000-01-23T04:56:07.000+00:00
          merchantAddress:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          id: id
          categories:
          - categories
          - categories
          user: user
          account: account
          rawMemo: rawMemo
        - image: image
          amount: amount
          backgroundImage: backgroundImage
          memo: memo
          excludeFromBreakdowns: true
          merchant: merchant
          historical:
          - historical
          - historical
          merchantData:
            image: image
            hours:
              description: description
            twitter: twitter
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            phone: phone
            backgroundImage: backgroundImage
            facebook: facebook
            name: name
            yelp: yelp
            instagram: instagram
            url: url
          url: url
          network: network
          tags:
          - tags
          - tags
          userTransactedAt: 2000-01-23T04:56:07.000+00:00
          merchantAddress:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          id: id
          categories:
          - categories
          - categories
          user: user
          account: account
          rawMemo: rawMemo
      properties:
        transactions:
          items:
            $ref: '#/components/schemas/CleanTransaction'
          type: array
      required:
      - transactions
      type: object
    Address:
      example:
        zip: zip
        city: city
        coordinates:
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
        state: state
        line2: line2
        line1: line1
      properties:
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        coordinates:
          $ref: '#/components/schemas/LatLong'
      required:
      - city
      - line1
      - state
      - zip
      type: object
    ApiAccount:
      example:
        displayNameDetailed: displayNameDetailed
        displayName: displayName
        colors:
          darker: darker
          light: light
          dark: dark
          primary: primary
        institution: institution
        createdAt: 2000-01-23T04:56:07.000+00:00
        balance:
          current: current
          available: available
          limit: limit
        institutionName: institutionName
        logo: logo
        id: id
        user: user
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        user:
          type: string
        displayName:
          type: string
        displayNameDetailed:
          type: string
        institution:
          type: string
        institutionName:
          type: string
        logo:
          type: string
        colors:
          $ref: '#/components/schemas/InstitutionColors'
        accountType:
          $ref: '#/components/schemas/AccountType'
        accountSubType:
          $ref: '#/components/schemas/AccountSubType'
        balance:
          $ref: '#/components/schemas/Balance'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - accountSubType
      - accountType
      - balance
      - createdAt
      - displayName
      - displayNameDetailed
      - id
      - institution
      - institutionName
      - updatedAt
      - user
      type: object
    BROKERAGE1:
      type: object
    BadRequestServiceError:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    Balance:
      example:
        current: current
        available: available
        limit: limit
      properties:
        current:
          type: string
        available:
          type: string
        limit:
          type: string
      required:
      - current
      type: object
    BootstrapStrategy:
      enum:
      - user-exact
      - user-fuzzy
      - account-exact
      - account-fuzzy
      - none
      type: string
    CREDIT1:
      type: object
    CREDIT_CARD1:
      type: object
    CleanCategory:
      enum:
      - Arts
      - Music
      - Movies & Television
      - Newspaper & Magazines
      - Other Entertainment
      - Theater
      - Gambling
      - Deposit
      - Withdrawal
      - Dividends
      - Buy
      - Sell
      - Other Investments
      - Gas & Fuel
      - Car Parts
      - Toll Fee
      - Parking
      - Traffic Tickets
      - Maintenance & Repairs
      - Auto Payment
      - Auto Insurance
      - Public Transportation
      - Other Car
      - Taxi
      - Boat
      - Air Travel
      - Lodging
      - Ride Share & Rental
      - Other Travel
      - Account Maintenance
      - Overdraft Fee
      - Insufficient Funds Fee
      - ATM Fee
      - Check Order Fee
      - Interest Charged Fee
      - Foreign Transaction Fee
      - Wire Fee
      - Excessive Transactions Fee
      - Late Fee
      - Card Membership Fee
      - Other Fee
      - Rent
      - Mortgage
      - Other Housing
      - Rent Reimbursement
      - Yard & Garden
      - Credit card payment
      - ATM Withdrawals
      - Internal Transfer
      - External Transfer
      - Other Transfer
      - Loan Payment
      - Services
      - Legal Services
      - Accounting Services
      - Real Estate Services
      - Business Services
      - Computer Services
      - Online Subscriptions
      - Financial Services
      - Cleaning Services
      - Internet
      - Home Insurance
      - Renter's Insurance
      - Life Insurance
      - Other Insurance
      - Phone Bill
      - Utilities
      - TV
      - Other Bills
      - Paycheck
      - Interest
      - Reimbursement
      - Other Income
      - Tuition
      - Student Loan
      - Other Education
      - Health Insurance
      - Gym
      - Dentist
      - Doctor
      - Pharmacy
      - Medical Labs
      - Barber and Salon
      - Spa
      - Nail and Skin
      - Other Health & Fitness
      - Groceries
      - Coffee
      - Restaurants
      - Alcohol
      - Bars & Clubs
      - Other Food & Dining
      - Clothes & Apparel
      - Sporting Goods
      - Electronics
      - Games
      - Tobacco & Vaping
      - Cannabis
      - Beauty
      - Books
      - Business Equipment
      - Home Hardware
      - Shipping
      - Software
      - Guns & Weapons
      - Taxes
      - Government Services
      - Fines
      - Gifts & Donations
      - Shopping
      - Other
      - Pets
      - Child Care
      type: string
    CleanSingleTransactionRequest:
      example:
        transaction:
          amount: amount
          merchant:
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            name: name
            mid: mid
            mcc: mcc
          store:
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            name: name
            mid: mid
          network: network
          tags:
          - tags
          - tags
          userTransactedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          categories:
          - categories
          - categories
          user: user
          account: account
          rawMemo: rawMemo
      properties:
        transaction:
          $ref: '#/components/schemas/RawTransaction'
      required:
      - transaction
      type: object
    CleanSingleTransactionResponse:
      example:
        transaction:
          image: image
          amount: amount
          backgroundImage: backgroundImage
          memo: memo
          excludeFromBreakdowns: true
          merchant: merchant
          historical:
          - historical
          - historical
          merchantData:
            image: image
            hours:
              description: description
            twitter: twitter
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            phone: phone
            backgroundImage: backgroundImage
            facebook: facebook
            name: name
            yelp: yelp
            instagram: instagram
            url: url
          url: url
          network: network
          tags:
          - tags
          - tags
          userTransactedAt: 2000-01-23T04:56:07.000+00:00
          merchantAddress:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          id: id
          categories:
          - categories
          - categories
          user: user
          account: account
          rawMemo: rawMemo
      properties:
        transaction:
          $ref: '#/components/schemas/CleanTransaction'
      required:
      - transaction
      type: object
    CleanTransaction:
      example:
        image: image
        amount: amount
        backgroundImage: backgroundImage
        memo: memo
        excludeFromBreakdowns: true
        merchant: merchant
        historical:
        - historical
        - historical
        merchantData:
          image: image
          hours:
            description: description
          twitter: twitter
          address:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          phone: phone
          backgroundImage: backgroundImage
          facebook: facebook
          name: name
          yelp: yelp
          instagram: instagram
          url: url
        url: url
        network: network
        tags:
        - tags
        - tags
        userTransactedAt: 2000-01-23T04:56:07.000+00:00
        merchantAddress:
          zip: zip
          city: city
          coordinates:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          state: state
          line2: line2
          line1: line1
        id: id
        categories:
        - categories
        - categories
        user: user
        account: account
        rawMemo: rawMemo
      properties:
        id:
          type: string
        account:
          type: string
        user:
          type: string
        memo:
          type: string
        rawMemo:
          type: string
        network:
          type: string
        userTransactedAt:
          format: date-time
          type: string
        amount:
          type: string
        categories:
          items:
            type: string
          type: array
        cleanCategory:
          $ref: '#/components/schemas/CleanCategory'
        url:
          type: string
        image:
          type: string
        backgroundImage:
          type: string
        excludeFromBreakdowns:
          type: boolean
        merchant:
          type: string
        merchantData:
          $ref: '#/components/schemas/Merchant'
        merchantAddress:
          $ref: '#/components/schemas/Address'
        historical:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
      required:
      - account
      - amount
      - categories
      - cleanCategory
      - excludeFromBreakdowns
      - historical
      - id
      - memo
      - rawMemo
      - tags
      - user
      type: object
    ConflictServiceError:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    CreateWebhookRequest:
      example:
        subscriptions:
        - null
        - null
        callback: callback
      properties:
        callback:
          type: string
        subscriptions:
          items:
            $ref: '#/components/schemas/WebhookSubscription'
          type: array
      required:
      - callback
      - subscriptions
      type: object
    CreateWebhookResponse:
      example:
        webhook:
          callback: callback
          id: id
          secret: secret
      properties:
        webhook:
          $ref: '#/components/schemas/Webhook'
      required:
      - webhook
      type: object
    DEPOSITORY1:
      type: object
    EmptyResponse:
      example:
        a: 0
      properties:
        a:
          type: integer
      type: object
    GLOBAL_EXACT:
      type: object
    GLOBAL_FUZZY:
      type: object
    GetAccountsResponse:
      example:
        accounts:
        - displayNameDetailed: displayNameDetailed
          displayName: displayName
          colors:
            darker: darker
            light: light
            dark: dark
            primary: primary
          institution: institution
          createdAt: 2000-01-23T04:56:07.000+00:00
          balance:
            current: current
            available: available
            limit: limit
          institutionName: institutionName
          logo: logo
          id: id
          user: user
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - displayNameDetailed: displayNameDetailed
          displayName: displayName
          colors:
            darker: darker
            light: light
            dark: dark
            primary: primary
          institution: institution
          createdAt: 2000-01-23T04:56:07.000+00:00
          balance:
            current: current
            available: available
            limit: limit
          institutionName: institutionName
          logo: logo
          id: id
          user: user
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/ApiAccount'
          type: array
      required:
      - accounts
      type: object
    GetMerchantResponse:
      example:
        merchant:
          image: image
          hours:
            description: description
          twitter: twitter
          address:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          phone: phone
          backgroundImage: backgroundImage
          facebook: facebook
          name: name
          yelp: yelp
          instagram: instagram
          url: url
      properties:
        merchant:
          $ref: '#/components/schemas/Merchant'
      type: object
    GetTransactionsResponse:
      example:
        transactions:
        - image: image
          amount: amount
          backgroundImage: backgroundImage
          memo: memo
          excludeFromBreakdowns: true
          merchant: merchant
          historical:
          - historical
          - historical
          merchantData:
            image: image
            hours:
              description: description
            twitter: twitter
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            phone: phone
            backgroundImage: backgroundImage
            facebook: facebook
            name: name
            yelp: yelp
            instagram: instagram
            url: url
          url: url
          network: network
          tags:
          - tags
          - tags
          userTransactedAt: 2000-01-23T04:56:07.000+00:00
          merchantAddress:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          id: id
          categories:
          - categories
          - categories
          user: user
          account: account
          rawMemo: rawMemo
        - image: image
          amount: amount
          backgroundImage: backgroundImage
          memo: memo
          excludeFromBreakdowns: true
          merchant: merchant
          historical:
          - historical
          - historical
          merchantData:
            image: image
            hours:
              description: description
            twitter: twitter
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            phone: phone
            backgroundImage: backgroundImage
            facebook: facebook
            name: name
            yelp: yelp
            instagram: instagram
            url: url
          url: url
          network: network
          tags:
          - tags
          - tags
          userTransactedAt: 2000-01-23T04:56:07.000+00:00
          merchantAddress:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          id: id
          categories:
          - categories
          - categories
          user: user
          account: account
          rawMemo: rawMemo
        highWaterMark: highWaterMark
      properties:
        transactions:
          items:
            $ref: '#/components/schemas/CleanTransaction'
          type: array
        highWaterMark:
          type: string
      required:
      - transactions
      type: object
    GetWebhooksResponse:
      example:
        webhooks:
        - callback: callback
          id: id
          secret: secret
        - callback: callback
          id: id
          secret: secret
      properties:
        webhooks:
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      required:
      - webhooks
      type: object
    InstitutionColors:
      example:
        darker: darker
        light: light
        dark: dark
        primary: primary
      properties:
        dark:
          type: string
        darker:
          type: string
        light:
          type: string
        primary:
          type: string
      required:
      - dark
      - darker
      - light
      - primary
      type: object
    LOAN1:
      type: object
    LatLong:
      example:
        latitude: 0.8008281904610115
        longitude: 6.027456183070403
      properties:
        latitude:
          type: number
        longitude:
          type: number
      required:
      - latitude
      - longitude
      type: object
    MORTGAGE1:
      type: object
    Merchant:
      example:
        image: image
        hours:
          description: description
        twitter: twitter
        address:
          zip: zip
          city: city
          coordinates:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          state: state
          line2: line2
          line1: line1
        phone: phone
        backgroundImage: backgroundImage
        facebook: facebook
        name: name
        yelp: yelp
        instagram: instagram
        url: url
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        hours:
          $ref: '#/components/schemas/OpenHours'
        image:
          type: string
        backgroundImage:
          type: string
        category:
          $ref: '#/components/schemas/CleanCategory'
        phone:
          type: string
        url:
          type: string
        facebook:
          type: string
        twitter:
          type: string
        instagram:
          type: string
        yelp:
          type: string
      required:
      - category
      - name
      type: object
    NotFoundServiceError:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    OTHER1:
      type: object
    OTHER2:
      type: object
    OpenHours:
      example:
        description: description
      properties:
        description:
          type: string
      required:
      - description
      type: object
    RawMerchant:
      example:
        address:
          zip: zip
          city: city
          coordinates:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          state: state
          line2: line2
          line1: line1
        name: name
        mid: mid
        mcc: mcc
      properties:
        mid:
          type: string
        mcc:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
      type: object
    RawMerchantStore:
      example:
        address:
          zip: zip
          city: city
          coordinates:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          state: state
          line2: line2
          line1: line1
        name: name
        mid: mid
      properties:
        mid:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
      type: object
    RawTransaction:
      example:
        amount: amount
        merchant:
          address:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          name: name
          mid: mid
          mcc: mcc
        store:
          address:
            zip: zip
            city: city
            coordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            state: state
            line2: line2
            line1: line1
          name: name
          mid: mid
        network: network
        tags:
        - tags
        - tags
        userTransactedAt: 2000-01-23T04:56:07.000+00:00
        id: id
        categories:
        - categories
        - categories
        user: user
        account: account
        rawMemo: rawMemo
      properties:
        id:
          type: string
        account:
          type: string
        user:
          type: string
        rawMemo:
          type: string
        merchant:
          $ref: '#/components/schemas/RawMerchant'
        store:
          $ref: '#/components/schemas/RawMerchantStore'
        network:
          type: string
        userTransactedAt:
          format: date-time
          type: string
        amount:
          type: string
        categories:
          items:
            type: string
          type: array
        kind:
          $ref: '#/components/schemas/TransactionKind'
        state:
          $ref: '#/components/schemas/TransactionState'
        tags:
          items:
            type: string
          type: array
      required:
      - account
      - amount
      - categories
      - id
      - kind
      - rawMemo
      - state
      - tags
      - user
      type: object
    ServiceError:
      oneOf:
      - $ref: '#/components/schemas/UnauthorizedServiceError'
      - $ref: '#/components/schemas/TooManyRequestsServiceError'
      - $ref: '#/components/schemas/NotFoundServiceError'
      - $ref: '#/components/schemas/ConflictServiceError'
      - $ref: '#/components/schemas/UncaughtExceptionServiceError'
      - $ref: '#/components/schemas/BadRequestServiceError'
    TenantServiceAccountAgentLoginRequest:
      example:
        id: id
        secret: secret
      properties:
        id:
          type: string
        secret:
          type: string
      required:
      - id
      - secret
      type: object
    TenantServiceAccountAgentLoginResponse:
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        token:
          type: string
        expiry:
          format: date-time
          type: string
      required:
      - expiry
      - token
      type: object
    TooManyRequestsServiceError:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    TransactionKind:
      enum:
      - ACH
      - FEE
      - DEBIT_CARD
      - CREDIT_CARD
      - REVERSAL
      - CHARGE_BACK
      - UNKNOWN
      type: string
    TransactionState:
      enum:
      - PENDING
      - COMPLETED
      - REVERSED
      - ERROR
      type: string
    UnauthorizedServiceError:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    UncaughtExceptionServiceError:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    UploadBatchTransactionsRequest:
      example:
        transactions:
        - amount: amount
          merchant:
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            name: name
            mid: mid
            mcc: mcc
          store:
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            name: name
            mid: mid
          network: network
          tags:
          - tags
          - tags
          userTransactedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          categories:
          - categories
          - categories
          user: user
          account: account
          rawMemo: rawMemo
        - amount: amount
          merchant:
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            name: name
            mid: mid
            mcc: mcc
          store:
            address:
              zip: zip
              city: city
              coordinates:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              state: state
              line2: line2
              line1: line1
            name: name
            mid: mid
          network: network
          tags:
          - tags
          - tags
          userTransactedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          categories:
          - categories
          - categories
          user: user
          account: account
          rawMemo: rawMemo
      properties:
        transactions:
          items:
            $ref: '#/components/schemas/RawTransaction'
          type: array
      required:
      - transactions
      type: object
    Webhook:
      example:
        callback: callback
        id: id
        secret: secret
      properties:
        id:
          type: string
        callback:
          type: string
        secret:
          type: string
      required:
      - callback
      - id
      - secret
      type: object
    WebhookSubscription:
      enum:
      - TRANSACTIONS
      - INSTITUTIONS
      type: string
