/**
 * Haven Money API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.2.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Address.h
 *
 * 
 */

#ifndef DEV_HAVEN_CLIENT_MODEL_Address_H_
#define DEV_HAVEN_CLIENT_MODEL_Address_H_


#include "../ModelBase.h"

#include "LatLong.h"
#include <cpprest/details/basic_types.h>

namespace dev {
namespace haven {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Address
    : public ModelBase
{
public:
    Address();
    virtual ~Address();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Address members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLine1() const;
    
    void setLine1(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLine2() const;
    bool line2IsSet() const;
    void unsetLine2();

    void setLine2(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCity() const;
    
    void setCity(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getState() const;
    
    void setState(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getZip() const;
    
    void setZip(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<LatLong> getCoordinates() const;
    bool coordinatesIsSet() const;
    void unsetCoordinates();

    void setCoordinates(const std::shared_ptr<LatLong>& value);


protected:
    utility::string_t m_Line1;
        utility::string_t m_Line2;
    bool m_Line2IsSet;
    utility::string_t m_City;
        utility::string_t m_State;
        utility::string_t m_Zip;
        std::shared_ptr<LatLong> m_Coordinates;
    bool m_CoordinatesIsSet;
};


}
}
}
}

#endif /* DEV_HAVEN_CLIENT_MODEL_Address_H_ */
