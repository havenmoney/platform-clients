/**
 * Haven Money API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.2.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AccountUpdate.h
 *
 * 
 */

#ifndef DEV_HAVEN_CLIENT_MODEL_AccountUpdate_H_
#define DEV_HAVEN_CLIENT_MODEL_AccountUpdate_H_


#include "../ModelBase.h"

#include "AccountType.h"
#include "AccountSubType.h"
#include "Balance.h"
#include <cpprest/details/basic_types.h>

namespace dev {
namespace haven {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  AccountUpdate
    : public ModelBase
{
public:
    AccountUpdate();
    virtual ~AccountUpdate();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AccountUpdate members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    
    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUser() const;
    
    void setUser(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayName() const;
    
    void setDisplayName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayNameDetailed() const;
    
    void setDisplayNameDetailed(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getInstitution() const;
    
    void setInstitution(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getInstitutionName() const;
    
    void setInstitutionName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AccountType> getAccountType() const;
    
    void setAccountType(const std::shared_ptr<AccountType>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AccountSubType> getAccountSubType() const;
    
    void setAccountSubType(const std::shared_ptr<AccountSubType>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Balance> getBalance() const;
    
    void setBalance(const std::shared_ptr<Balance>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCreatedAt() const;
    
    void setCreatedAt(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getUpdatedAt() const;
    
    void setUpdatedAt(const utility::datetime& value);


protected:
    utility::string_t m_Id;
        utility::string_t m_User;
        utility::string_t m_DisplayName;
        utility::string_t m_DisplayNameDetailed;
        utility::string_t m_Institution;
        utility::string_t m_InstitutionName;
        std::shared_ptr<AccountType> m_AccountType;
        std::shared_ptr<AccountSubType> m_AccountSubType;
        std::shared_ptr<Balance> m_Balance;
        utility::datetime m_CreatedAt;
        utility::datetime m_UpdatedAt;
    };


}
}
}
}

#endif /* DEV_HAVEN_CLIENT_MODEL_AccountUpdate_H_ */
