/**
 * Haven Money API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.2.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "AccountSubType.h"

namespace dev {
namespace haven {
namespace client {
namespace model {



AccountSubType::AccountSubType()
{
}

AccountSubType::~AccountSubType()
{
}

void AccountSubType::validate()
{
    // TODO: implement validation
}

web::json::value AccountSubType::toJson() const
{
    web::json::value val = web::json::value::object();

    
    if (m_value == eAccountSubType::AccountSubType_AUTO) val = web::json::value::string(U("AUTO"));
    if (m_value == eAccountSubType::AccountSubType_BROKERAGE) val = web::json::value::string(U("BROKERAGE"));
    if (m_value == eAccountSubType::AccountSubType_CASH_ISA) val = web::json::value::string(U("CASH_ISA"));
    if (m_value == eAccountSubType::AccountSubType_CASH_MANAGEMENT) val = web::json::value::string(U("CASH_MANAGEMENT"));
    if (m_value == eAccountSubType::AccountSubType_CD) val = web::json::value::string(U("CD"));
    if (m_value == eAccountSubType::AccountSubType_CHECKING) val = web::json::value::string(U("CHECKING"));
    if (m_value == eAccountSubType::AccountSubType_COMMERCIAL) val = web::json::value::string(U("COMMERCIAL"));
    if (m_value == eAccountSubType::AccountSubType_CONSTRUCTION) val = web::json::value::string(U("CONSTRUCTION"));
    if (m_value == eAccountSubType::AccountSubType_CONSUMER) val = web::json::value::string(U("CONSUMER"));
    if (m_value == eAccountSubType::AccountSubType_CREDIT) val = web::json::value::string(U("CREDIT"));
    if (m_value == eAccountSubType::AccountSubType_CREDIT_CARD) val = web::json::value::string(U("CREDIT_CARD"));
    if (m_value == eAccountSubType::AccountSubType_DEPOSITORY) val = web::json::value::string(U("DEPOSITORY"));
    if (m_value == eAccountSubType::AccountSubType_EDUCATION_SAVINGS_ACCOUNT) val = web::json::value::string(U("EDUCATION_SAVINGS_ACCOUNT"));
    if (m_value == eAccountSubType::AccountSubType_GIC) val = web::json::value::string(U("GIC"));
    if (m_value == eAccountSubType::AccountSubType_HEALTH_REIMBURSEMENT_ARRANGEMENT) val = web::json::value::string(U("HEALTH_REIMBURSEMENT_ARRANGEMENT"));
    if (m_value == eAccountSubType::AccountSubType_HOME) val = web::json::value::string(U("HOME"));
    if (m_value == eAccountSubType::AccountSubType_HOME_EQUITY) val = web::json::value::string(U("HOME_EQUITY"));
    if (m_value == eAccountSubType::AccountSubType_HSA) val = web::json::value::string(U("HSA"));
    if (m_value == eAccountSubType::AccountSubType_IRA) val = web::json::value::string(U("IRA"));
    if (m_value == eAccountSubType::AccountSubType_ISA) val = web::json::value::string(U("ISA"));
    if (m_value == eAccountSubType::AccountSubType_KEOGH) val = web::json::value::string(U("KEOGH"));
    if (m_value == eAccountSubType::AccountSubType_LIF) val = web::json::value::string(U("LIF"));
    if (m_value == eAccountSubType::AccountSubType_LINE_OF_CREDIT) val = web::json::value::string(U("LINE_OF_CREDIT"));
    if (m_value == eAccountSubType::AccountSubType_LIRA) val = web::json::value::string(U("LIRA"));
    if (m_value == eAccountSubType::AccountSubType_LOAN) val = web::json::value::string(U("LOAN"));
    if (m_value == eAccountSubType::AccountSubType_LRIF) val = web::json::value::string(U("LRIF"));
    if (m_value == eAccountSubType::AccountSubType_LRSP) val = web::json::value::string(U("LRSP"));
    if (m_value == eAccountSubType::AccountSubType_MONEY_MARKET) val = web::json::value::string(U("MONEY_MARKET"));
    if (m_value == eAccountSubType::AccountSubType_MORTGAGE) val = web::json::value::string(U("MORTGAGE"));
    if (m_value == eAccountSubType::AccountSubType_MUTUAL_FUND) val = web::json::value::string(U("MUTUAL_FUND"));
    if (m_value == eAccountSubType::AccountSubType_NON_TAXABLE_BROKERAGE_ACCOUNT) val = web::json::value::string(U("NON_TAXABLE_BROKERAGE_ACCOUNT"));
    if (m_value == eAccountSubType::AccountSubType_OTHER) val = web::json::value::string(U("OTHER"));
    if (m_value == eAccountSubType::AccountSubType_OVERDRAFT) val = web::json::value::string(U("OVERDRAFT"));
    if (m_value == eAccountSubType::AccountSubType_PAYPAL) val = web::json::value::string(U("PAYPAL"));
    if (m_value == eAccountSubType::AccountSubType_PENSION) val = web::json::value::string(U("PENSION"));
    if (m_value == eAccountSubType::AccountSubType_PREPAID) val = web::json::value::string(U("PREPAID"));
    if (m_value == eAccountSubType::AccountSubType_PRIF) val = web::json::value::string(U("PRIF"));
    if (m_value == eAccountSubType::AccountSubType_PROFIT_SHARING_PLAN) val = web::json::value::string(U("PROFIT_SHARING_PLAN"));
    if (m_value == eAccountSubType::AccountSubType_RDSP) val = web::json::value::string(U("RDSP"));
    if (m_value == eAccountSubType::AccountSubType_RECURRING) val = web::json::value::string(U("RECURRING"));
    if (m_value == eAccountSubType::AccountSubType_RESP) val = web::json::value::string(U("RESP"));
    if (m_value == eAccountSubType::AccountSubType_RETIREMENT) val = web::json::value::string(U("RETIREMENT"));
    if (m_value == eAccountSubType::AccountSubType_REWARDS) val = web::json::value::string(U("REWARDS"));
    if (m_value == eAccountSubType::AccountSubType_RLIF) val = web::json::value::string(U("RLIF"));
    if (m_value == eAccountSubType::AccountSubType_ROTH) val = web::json::value::string(U("ROTH"));
    if (m_value == eAccountSubType::AccountSubType_ROTH_401K) val = web::json::value::string(U("ROTH_401K"));
    if (m_value == eAccountSubType::AccountSubType_RRIF) val = web::json::value::string(U("RRIF"));
    if (m_value == eAccountSubType::AccountSubType_RRSP) val = web::json::value::string(U("RRSP"));
    if (m_value == eAccountSubType::AccountSubType_SAFE_DEPOSIT) val = web::json::value::string(U("SAFE_DEPOSIT"));
    if (m_value == eAccountSubType::AccountSubType_SARSEP) val = web::json::value::string(U("SARSEP"));
    if (m_value == eAccountSubType::AccountSubType_SAVINGS) val = web::json::value::string(U("SAVINGS"));
    if (m_value == eAccountSubType::AccountSubType_SEP_IRA) val = web::json::value::string(U("SEP_IRA"));
    if (m_value == eAccountSubType::AccountSubType_SIMPLE_IRA) val = web::json::value::string(U("SIMPLE_IRA"));
    if (m_value == eAccountSubType::AccountSubType_SIPP) val = web::json::value::string(U("SIPP"));
    if (m_value == eAccountSubType::AccountSubType_STOCK_PLAN) val = web::json::value::string(U("STOCK_PLAN"));
    if (m_value == eAccountSubType::AccountSubType_STUDENT) val = web::json::value::string(U("STUDENT"));
    if (m_value == eAccountSubType::AccountSubType_TFSA) val = web::json::value::string(U("TFSA"));
    if (m_value == eAccountSubType::AccountSubType_THRIFT_SAVINGS_PLAN) val = web::json::value::string(U("THRIFT_SAVINGS_PLAN"));
    if (m_value == eAccountSubType::AccountSubType_T_401A) val = web::json::value::string(U("T_401A"));
    if (m_value == eAccountSubType::AccountSubType_T_401K) val = web::json::value::string(U("T_401K"));
    if (m_value == eAccountSubType::AccountSubType_T_403B) val = web::json::value::string(U("T_403B"));
    if (m_value == eAccountSubType::AccountSubType_T_457B) val = web::json::value::string(U("T_457B"));
    if (m_value == eAccountSubType::AccountSubType_T_529) val = web::json::value::string(U("T_529"));
    if (m_value == eAccountSubType::AccountSubType_UGMA) val = web::json::value::string(U("UGMA"));
    if (m_value == eAccountSubType::AccountSubType_UTMA) val = web::json::value::string(U("UTMA"));
    if (m_value == eAccountSubType::AccountSubType_VARIABLE_ANNUITY) val = web::json::value::string(U("VARIABLE_ANNUITY"));

    return val;
}

void AccountSubType::fromJson(const web::json::value& val)
{
    auto s = val.as_string();

    
    if (s == utility::conversions::to_string_t("AUTO")) m_value = eAccountSubType::AccountSubType_AUTO;
    if (s == utility::conversions::to_string_t("BROKERAGE")) m_value = eAccountSubType::AccountSubType_BROKERAGE;
    if (s == utility::conversions::to_string_t("CASH_ISA")) m_value = eAccountSubType::AccountSubType_CASH_ISA;
    if (s == utility::conversions::to_string_t("CASH_MANAGEMENT")) m_value = eAccountSubType::AccountSubType_CASH_MANAGEMENT;
    if (s == utility::conversions::to_string_t("CD")) m_value = eAccountSubType::AccountSubType_CD;
    if (s == utility::conversions::to_string_t("CHECKING")) m_value = eAccountSubType::AccountSubType_CHECKING;
    if (s == utility::conversions::to_string_t("COMMERCIAL")) m_value = eAccountSubType::AccountSubType_COMMERCIAL;
    if (s == utility::conversions::to_string_t("CONSTRUCTION")) m_value = eAccountSubType::AccountSubType_CONSTRUCTION;
    if (s == utility::conversions::to_string_t("CONSUMER")) m_value = eAccountSubType::AccountSubType_CONSUMER;
    if (s == utility::conversions::to_string_t("CREDIT")) m_value = eAccountSubType::AccountSubType_CREDIT;
    if (s == utility::conversions::to_string_t("CREDIT_CARD")) m_value = eAccountSubType::AccountSubType_CREDIT_CARD;
    if (s == utility::conversions::to_string_t("DEPOSITORY")) m_value = eAccountSubType::AccountSubType_DEPOSITORY;
    if (s == utility::conversions::to_string_t("EDUCATION_SAVINGS_ACCOUNT")) m_value = eAccountSubType::AccountSubType_EDUCATION_SAVINGS_ACCOUNT;
    if (s == utility::conversions::to_string_t("GIC")) m_value = eAccountSubType::AccountSubType_GIC;
    if (s == utility::conversions::to_string_t("HEALTH_REIMBURSEMENT_ARRANGEMENT")) m_value = eAccountSubType::AccountSubType_HEALTH_REIMBURSEMENT_ARRANGEMENT;
    if (s == utility::conversions::to_string_t("HOME")) m_value = eAccountSubType::AccountSubType_HOME;
    if (s == utility::conversions::to_string_t("HOME_EQUITY")) m_value = eAccountSubType::AccountSubType_HOME_EQUITY;
    if (s == utility::conversions::to_string_t("HSA")) m_value = eAccountSubType::AccountSubType_HSA;
    if (s == utility::conversions::to_string_t("IRA")) m_value = eAccountSubType::AccountSubType_IRA;
    if (s == utility::conversions::to_string_t("ISA")) m_value = eAccountSubType::AccountSubType_ISA;
    if (s == utility::conversions::to_string_t("KEOGH")) m_value = eAccountSubType::AccountSubType_KEOGH;
    if (s == utility::conversions::to_string_t("LIF")) m_value = eAccountSubType::AccountSubType_LIF;
    if (s == utility::conversions::to_string_t("LINE_OF_CREDIT")) m_value = eAccountSubType::AccountSubType_LINE_OF_CREDIT;
    if (s == utility::conversions::to_string_t("LIRA")) m_value = eAccountSubType::AccountSubType_LIRA;
    if (s == utility::conversions::to_string_t("LOAN")) m_value = eAccountSubType::AccountSubType_LOAN;
    if (s == utility::conversions::to_string_t("LRIF")) m_value = eAccountSubType::AccountSubType_LRIF;
    if (s == utility::conversions::to_string_t("LRSP")) m_value = eAccountSubType::AccountSubType_LRSP;
    if (s == utility::conversions::to_string_t("MONEY_MARKET")) m_value = eAccountSubType::AccountSubType_MONEY_MARKET;
    if (s == utility::conversions::to_string_t("MORTGAGE")) m_value = eAccountSubType::AccountSubType_MORTGAGE;
    if (s == utility::conversions::to_string_t("MUTUAL_FUND")) m_value = eAccountSubType::AccountSubType_MUTUAL_FUND;
    if (s == utility::conversions::to_string_t("NON_TAXABLE_BROKERAGE_ACCOUNT")) m_value = eAccountSubType::AccountSubType_NON_TAXABLE_BROKERAGE_ACCOUNT;
    if (s == utility::conversions::to_string_t("OTHER")) m_value = eAccountSubType::AccountSubType_OTHER;
    if (s == utility::conversions::to_string_t("OVERDRAFT")) m_value = eAccountSubType::AccountSubType_OVERDRAFT;
    if (s == utility::conversions::to_string_t("PAYPAL")) m_value = eAccountSubType::AccountSubType_PAYPAL;
    if (s == utility::conversions::to_string_t("PENSION")) m_value = eAccountSubType::AccountSubType_PENSION;
    if (s == utility::conversions::to_string_t("PREPAID")) m_value = eAccountSubType::AccountSubType_PREPAID;
    if (s == utility::conversions::to_string_t("PRIF")) m_value = eAccountSubType::AccountSubType_PRIF;
    if (s == utility::conversions::to_string_t("PROFIT_SHARING_PLAN")) m_value = eAccountSubType::AccountSubType_PROFIT_SHARING_PLAN;
    if (s == utility::conversions::to_string_t("RDSP")) m_value = eAccountSubType::AccountSubType_RDSP;
    if (s == utility::conversions::to_string_t("RECURRING")) m_value = eAccountSubType::AccountSubType_RECURRING;
    if (s == utility::conversions::to_string_t("RESP")) m_value = eAccountSubType::AccountSubType_RESP;
    if (s == utility::conversions::to_string_t("RETIREMENT")) m_value = eAccountSubType::AccountSubType_RETIREMENT;
    if (s == utility::conversions::to_string_t("REWARDS")) m_value = eAccountSubType::AccountSubType_REWARDS;
    if (s == utility::conversions::to_string_t("RLIF")) m_value = eAccountSubType::AccountSubType_RLIF;
    if (s == utility::conversions::to_string_t("ROTH")) m_value = eAccountSubType::AccountSubType_ROTH;
    if (s == utility::conversions::to_string_t("ROTH_401K")) m_value = eAccountSubType::AccountSubType_ROTH_401K;
    if (s == utility::conversions::to_string_t("RRIF")) m_value = eAccountSubType::AccountSubType_RRIF;
    if (s == utility::conversions::to_string_t("RRSP")) m_value = eAccountSubType::AccountSubType_RRSP;
    if (s == utility::conversions::to_string_t("SAFE_DEPOSIT")) m_value = eAccountSubType::AccountSubType_SAFE_DEPOSIT;
    if (s == utility::conversions::to_string_t("SARSEP")) m_value = eAccountSubType::AccountSubType_SARSEP;
    if (s == utility::conversions::to_string_t("SAVINGS")) m_value = eAccountSubType::AccountSubType_SAVINGS;
    if (s == utility::conversions::to_string_t("SEP_IRA")) m_value = eAccountSubType::AccountSubType_SEP_IRA;
    if (s == utility::conversions::to_string_t("SIMPLE_IRA")) m_value = eAccountSubType::AccountSubType_SIMPLE_IRA;
    if (s == utility::conversions::to_string_t("SIPP")) m_value = eAccountSubType::AccountSubType_SIPP;
    if (s == utility::conversions::to_string_t("STOCK_PLAN")) m_value = eAccountSubType::AccountSubType_STOCK_PLAN;
    if (s == utility::conversions::to_string_t("STUDENT")) m_value = eAccountSubType::AccountSubType_STUDENT;
    if (s == utility::conversions::to_string_t("TFSA")) m_value = eAccountSubType::AccountSubType_TFSA;
    if (s == utility::conversions::to_string_t("THRIFT_SAVINGS_PLAN")) m_value = eAccountSubType::AccountSubType_THRIFT_SAVINGS_PLAN;
    if (s == utility::conversions::to_string_t("T_401A")) m_value = eAccountSubType::AccountSubType_T_401A;
    if (s == utility::conversions::to_string_t("T_401K")) m_value = eAccountSubType::AccountSubType_T_401K;
    if (s == utility::conversions::to_string_t("T_403B")) m_value = eAccountSubType::AccountSubType_T_403B;
    if (s == utility::conversions::to_string_t("T_457B")) m_value = eAccountSubType::AccountSubType_T_457B;
    if (s == utility::conversions::to_string_t("T_529")) m_value = eAccountSubType::AccountSubType_T_529;
    if (s == utility::conversions::to_string_t("UGMA")) m_value = eAccountSubType::AccountSubType_UGMA;
    if (s == utility::conversions::to_string_t("UTMA")) m_value = eAccountSubType::AccountSubType_UTMA;
    if (s == utility::conversions::to_string_t("VARIABLE_ANNUITY")) m_value = eAccountSubType::AccountSubType_VARIABLE_ANNUITY;
}

void AccountSubType::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    utility::string_t s;

    
    if (m_value == eAccountSubType::AccountSubType_AUTO) s = utility::conversions::to_string_t("AUTO");
    if (m_value == eAccountSubType::AccountSubType_BROKERAGE) s = utility::conversions::to_string_t("BROKERAGE");
    if (m_value == eAccountSubType::AccountSubType_CASH_ISA) s = utility::conversions::to_string_t("CASH_ISA");
    if (m_value == eAccountSubType::AccountSubType_CASH_MANAGEMENT) s = utility::conversions::to_string_t("CASH_MANAGEMENT");
    if (m_value == eAccountSubType::AccountSubType_CD) s = utility::conversions::to_string_t("CD");
    if (m_value == eAccountSubType::AccountSubType_CHECKING) s = utility::conversions::to_string_t("CHECKING");
    if (m_value == eAccountSubType::AccountSubType_COMMERCIAL) s = utility::conversions::to_string_t("COMMERCIAL");
    if (m_value == eAccountSubType::AccountSubType_CONSTRUCTION) s = utility::conversions::to_string_t("CONSTRUCTION");
    if (m_value == eAccountSubType::AccountSubType_CONSUMER) s = utility::conversions::to_string_t("CONSUMER");
    if (m_value == eAccountSubType::AccountSubType_CREDIT) s = utility::conversions::to_string_t("CREDIT");
    if (m_value == eAccountSubType::AccountSubType_CREDIT_CARD) s = utility::conversions::to_string_t("CREDIT_CARD");
    if (m_value == eAccountSubType::AccountSubType_DEPOSITORY) s = utility::conversions::to_string_t("DEPOSITORY");
    if (m_value == eAccountSubType::AccountSubType_EDUCATION_SAVINGS_ACCOUNT) s = utility::conversions::to_string_t("EDUCATION_SAVINGS_ACCOUNT");
    if (m_value == eAccountSubType::AccountSubType_GIC) s = utility::conversions::to_string_t("GIC");
    if (m_value == eAccountSubType::AccountSubType_HEALTH_REIMBURSEMENT_ARRANGEMENT) s = utility::conversions::to_string_t("HEALTH_REIMBURSEMENT_ARRANGEMENT");
    if (m_value == eAccountSubType::AccountSubType_HOME) s = utility::conversions::to_string_t("HOME");
    if (m_value == eAccountSubType::AccountSubType_HOME_EQUITY) s = utility::conversions::to_string_t("HOME_EQUITY");
    if (m_value == eAccountSubType::AccountSubType_HSA) s = utility::conversions::to_string_t("HSA");
    if (m_value == eAccountSubType::AccountSubType_IRA) s = utility::conversions::to_string_t("IRA");
    if (m_value == eAccountSubType::AccountSubType_ISA) s = utility::conversions::to_string_t("ISA");
    if (m_value == eAccountSubType::AccountSubType_KEOGH) s = utility::conversions::to_string_t("KEOGH");
    if (m_value == eAccountSubType::AccountSubType_LIF) s = utility::conversions::to_string_t("LIF");
    if (m_value == eAccountSubType::AccountSubType_LINE_OF_CREDIT) s = utility::conversions::to_string_t("LINE_OF_CREDIT");
    if (m_value == eAccountSubType::AccountSubType_LIRA) s = utility::conversions::to_string_t("LIRA");
    if (m_value == eAccountSubType::AccountSubType_LOAN) s = utility::conversions::to_string_t("LOAN");
    if (m_value == eAccountSubType::AccountSubType_LRIF) s = utility::conversions::to_string_t("LRIF");
    if (m_value == eAccountSubType::AccountSubType_LRSP) s = utility::conversions::to_string_t("LRSP");
    if (m_value == eAccountSubType::AccountSubType_MONEY_MARKET) s = utility::conversions::to_string_t("MONEY_MARKET");
    if (m_value == eAccountSubType::AccountSubType_MORTGAGE) s = utility::conversions::to_string_t("MORTGAGE");
    if (m_value == eAccountSubType::AccountSubType_MUTUAL_FUND) s = utility::conversions::to_string_t("MUTUAL_FUND");
    if (m_value == eAccountSubType::AccountSubType_NON_TAXABLE_BROKERAGE_ACCOUNT) s = utility::conversions::to_string_t("NON_TAXABLE_BROKERAGE_ACCOUNT");
    if (m_value == eAccountSubType::AccountSubType_OTHER) s = utility::conversions::to_string_t("OTHER");
    if (m_value == eAccountSubType::AccountSubType_OVERDRAFT) s = utility::conversions::to_string_t("OVERDRAFT");
    if (m_value == eAccountSubType::AccountSubType_PAYPAL) s = utility::conversions::to_string_t("PAYPAL");
    if (m_value == eAccountSubType::AccountSubType_PENSION) s = utility::conversions::to_string_t("PENSION");
    if (m_value == eAccountSubType::AccountSubType_PREPAID) s = utility::conversions::to_string_t("PREPAID");
    if (m_value == eAccountSubType::AccountSubType_PRIF) s = utility::conversions::to_string_t("PRIF");
    if (m_value == eAccountSubType::AccountSubType_PROFIT_SHARING_PLAN) s = utility::conversions::to_string_t("PROFIT_SHARING_PLAN");
    if (m_value == eAccountSubType::AccountSubType_RDSP) s = utility::conversions::to_string_t("RDSP");
    if (m_value == eAccountSubType::AccountSubType_RECURRING) s = utility::conversions::to_string_t("RECURRING");
    if (m_value == eAccountSubType::AccountSubType_RESP) s = utility::conversions::to_string_t("RESP");
    if (m_value == eAccountSubType::AccountSubType_RETIREMENT) s = utility::conversions::to_string_t("RETIREMENT");
    if (m_value == eAccountSubType::AccountSubType_REWARDS) s = utility::conversions::to_string_t("REWARDS");
    if (m_value == eAccountSubType::AccountSubType_RLIF) s = utility::conversions::to_string_t("RLIF");
    if (m_value == eAccountSubType::AccountSubType_ROTH) s = utility::conversions::to_string_t("ROTH");
    if (m_value == eAccountSubType::AccountSubType_ROTH_401K) s = utility::conversions::to_string_t("ROTH_401K");
    if (m_value == eAccountSubType::AccountSubType_RRIF) s = utility::conversions::to_string_t("RRIF");
    if (m_value == eAccountSubType::AccountSubType_RRSP) s = utility::conversions::to_string_t("RRSP");
    if (m_value == eAccountSubType::AccountSubType_SAFE_DEPOSIT) s = utility::conversions::to_string_t("SAFE_DEPOSIT");
    if (m_value == eAccountSubType::AccountSubType_SARSEP) s = utility::conversions::to_string_t("SARSEP");
    if (m_value == eAccountSubType::AccountSubType_SAVINGS) s = utility::conversions::to_string_t("SAVINGS");
    if (m_value == eAccountSubType::AccountSubType_SEP_IRA) s = utility::conversions::to_string_t("SEP_IRA");
    if (m_value == eAccountSubType::AccountSubType_SIMPLE_IRA) s = utility::conversions::to_string_t("SIMPLE_IRA");
    if (m_value == eAccountSubType::AccountSubType_SIPP) s = utility::conversions::to_string_t("SIPP");
    if (m_value == eAccountSubType::AccountSubType_STOCK_PLAN) s = utility::conversions::to_string_t("STOCK_PLAN");
    if (m_value == eAccountSubType::AccountSubType_STUDENT) s = utility::conversions::to_string_t("STUDENT");
    if (m_value == eAccountSubType::AccountSubType_TFSA) s = utility::conversions::to_string_t("TFSA");
    if (m_value == eAccountSubType::AccountSubType_THRIFT_SAVINGS_PLAN) s = utility::conversions::to_string_t("THRIFT_SAVINGS_PLAN");
    if (m_value == eAccountSubType::AccountSubType_T_401A) s = utility::conversions::to_string_t("T_401A");
    if (m_value == eAccountSubType::AccountSubType_T_401K) s = utility::conversions::to_string_t("T_401K");
    if (m_value == eAccountSubType::AccountSubType_T_403B) s = utility::conversions::to_string_t("T_403B");
    if (m_value == eAccountSubType::AccountSubType_T_457B) s = utility::conversions::to_string_t("T_457B");
    if (m_value == eAccountSubType::AccountSubType_T_529) s = utility::conversions::to_string_t("T_529");
    if (m_value == eAccountSubType::AccountSubType_UGMA) s = utility::conversions::to_string_t("UGMA");
    if (m_value == eAccountSubType::AccountSubType_UTMA) s = utility::conversions::to_string_t("UTMA");
    if (m_value == eAccountSubType::AccountSubType_VARIABLE_ANNUITY) s = utility::conversions::to_string_t("VARIABLE_ANNUITY");

    multipart->add(ModelBase::toHttpContent(namePrefix, s));
}

void AccountSubType::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    {
        utility::string_t s;
        s = ModelBase::stringFromHttpContent(multipart->getContent(namePrefix));
        eAccountSubType v;
        
        
        if (s == utility::conversions::to_string_t("AUTO")) v = eAccountSubType::AccountSubType_AUTO;
        if (s == utility::conversions::to_string_t("BROKERAGE")) v = eAccountSubType::AccountSubType_BROKERAGE;
        if (s == utility::conversions::to_string_t("CASH_ISA")) v = eAccountSubType::AccountSubType_CASH_ISA;
        if (s == utility::conversions::to_string_t("CASH_MANAGEMENT")) v = eAccountSubType::AccountSubType_CASH_MANAGEMENT;
        if (s == utility::conversions::to_string_t("CD")) v = eAccountSubType::AccountSubType_CD;
        if (s == utility::conversions::to_string_t("CHECKING")) v = eAccountSubType::AccountSubType_CHECKING;
        if (s == utility::conversions::to_string_t("COMMERCIAL")) v = eAccountSubType::AccountSubType_COMMERCIAL;
        if (s == utility::conversions::to_string_t("CONSTRUCTION")) v = eAccountSubType::AccountSubType_CONSTRUCTION;
        if (s == utility::conversions::to_string_t("CONSUMER")) v = eAccountSubType::AccountSubType_CONSUMER;
        if (s == utility::conversions::to_string_t("CREDIT")) v = eAccountSubType::AccountSubType_CREDIT;
        if (s == utility::conversions::to_string_t("CREDIT_CARD")) v = eAccountSubType::AccountSubType_CREDIT_CARD;
        if (s == utility::conversions::to_string_t("DEPOSITORY")) v = eAccountSubType::AccountSubType_DEPOSITORY;
        if (s == utility::conversions::to_string_t("EDUCATION_SAVINGS_ACCOUNT")) v = eAccountSubType::AccountSubType_EDUCATION_SAVINGS_ACCOUNT;
        if (s == utility::conversions::to_string_t("GIC")) v = eAccountSubType::AccountSubType_GIC;
        if (s == utility::conversions::to_string_t("HEALTH_REIMBURSEMENT_ARRANGEMENT")) v = eAccountSubType::AccountSubType_HEALTH_REIMBURSEMENT_ARRANGEMENT;
        if (s == utility::conversions::to_string_t("HOME")) v = eAccountSubType::AccountSubType_HOME;
        if (s == utility::conversions::to_string_t("HOME_EQUITY")) v = eAccountSubType::AccountSubType_HOME_EQUITY;
        if (s == utility::conversions::to_string_t("HSA")) v = eAccountSubType::AccountSubType_HSA;
        if (s == utility::conversions::to_string_t("IRA")) v = eAccountSubType::AccountSubType_IRA;
        if (s == utility::conversions::to_string_t("ISA")) v = eAccountSubType::AccountSubType_ISA;
        if (s == utility::conversions::to_string_t("KEOGH")) v = eAccountSubType::AccountSubType_KEOGH;
        if (s == utility::conversions::to_string_t("LIF")) v = eAccountSubType::AccountSubType_LIF;
        if (s == utility::conversions::to_string_t("LINE_OF_CREDIT")) v = eAccountSubType::AccountSubType_LINE_OF_CREDIT;
        if (s == utility::conversions::to_string_t("LIRA")) v = eAccountSubType::AccountSubType_LIRA;
        if (s == utility::conversions::to_string_t("LOAN")) v = eAccountSubType::AccountSubType_LOAN;
        if (s == utility::conversions::to_string_t("LRIF")) v = eAccountSubType::AccountSubType_LRIF;
        if (s == utility::conversions::to_string_t("LRSP")) v = eAccountSubType::AccountSubType_LRSP;
        if (s == utility::conversions::to_string_t("MONEY_MARKET")) v = eAccountSubType::AccountSubType_MONEY_MARKET;
        if (s == utility::conversions::to_string_t("MORTGAGE")) v = eAccountSubType::AccountSubType_MORTGAGE;
        if (s == utility::conversions::to_string_t("MUTUAL_FUND")) v = eAccountSubType::AccountSubType_MUTUAL_FUND;
        if (s == utility::conversions::to_string_t("NON_TAXABLE_BROKERAGE_ACCOUNT")) v = eAccountSubType::AccountSubType_NON_TAXABLE_BROKERAGE_ACCOUNT;
        if (s == utility::conversions::to_string_t("OTHER")) v = eAccountSubType::AccountSubType_OTHER;
        if (s == utility::conversions::to_string_t("OVERDRAFT")) v = eAccountSubType::AccountSubType_OVERDRAFT;
        if (s == utility::conversions::to_string_t("PAYPAL")) v = eAccountSubType::AccountSubType_PAYPAL;
        if (s == utility::conversions::to_string_t("PENSION")) v = eAccountSubType::AccountSubType_PENSION;
        if (s == utility::conversions::to_string_t("PREPAID")) v = eAccountSubType::AccountSubType_PREPAID;
        if (s == utility::conversions::to_string_t("PRIF")) v = eAccountSubType::AccountSubType_PRIF;
        if (s == utility::conversions::to_string_t("PROFIT_SHARING_PLAN")) v = eAccountSubType::AccountSubType_PROFIT_SHARING_PLAN;
        if (s == utility::conversions::to_string_t("RDSP")) v = eAccountSubType::AccountSubType_RDSP;
        if (s == utility::conversions::to_string_t("RECURRING")) v = eAccountSubType::AccountSubType_RECURRING;
        if (s == utility::conversions::to_string_t("RESP")) v = eAccountSubType::AccountSubType_RESP;
        if (s == utility::conversions::to_string_t("RETIREMENT")) v = eAccountSubType::AccountSubType_RETIREMENT;
        if (s == utility::conversions::to_string_t("REWARDS")) v = eAccountSubType::AccountSubType_REWARDS;
        if (s == utility::conversions::to_string_t("RLIF")) v = eAccountSubType::AccountSubType_RLIF;
        if (s == utility::conversions::to_string_t("ROTH")) v = eAccountSubType::AccountSubType_ROTH;
        if (s == utility::conversions::to_string_t("ROTH_401K")) v = eAccountSubType::AccountSubType_ROTH_401K;
        if (s == utility::conversions::to_string_t("RRIF")) v = eAccountSubType::AccountSubType_RRIF;
        if (s == utility::conversions::to_string_t("RRSP")) v = eAccountSubType::AccountSubType_RRSP;
        if (s == utility::conversions::to_string_t("SAFE_DEPOSIT")) v = eAccountSubType::AccountSubType_SAFE_DEPOSIT;
        if (s == utility::conversions::to_string_t("SARSEP")) v = eAccountSubType::AccountSubType_SARSEP;
        if (s == utility::conversions::to_string_t("SAVINGS")) v = eAccountSubType::AccountSubType_SAVINGS;
        if (s == utility::conversions::to_string_t("SEP_IRA")) v = eAccountSubType::AccountSubType_SEP_IRA;
        if (s == utility::conversions::to_string_t("SIMPLE_IRA")) v = eAccountSubType::AccountSubType_SIMPLE_IRA;
        if (s == utility::conversions::to_string_t("SIPP")) v = eAccountSubType::AccountSubType_SIPP;
        if (s == utility::conversions::to_string_t("STOCK_PLAN")) v = eAccountSubType::AccountSubType_STOCK_PLAN;
        if (s == utility::conversions::to_string_t("STUDENT")) v = eAccountSubType::AccountSubType_STUDENT;
        if (s == utility::conversions::to_string_t("TFSA")) v = eAccountSubType::AccountSubType_TFSA;
        if (s == utility::conversions::to_string_t("THRIFT_SAVINGS_PLAN")) v = eAccountSubType::AccountSubType_THRIFT_SAVINGS_PLAN;
        if (s == utility::conversions::to_string_t("T_401A")) v = eAccountSubType::AccountSubType_T_401A;
        if (s == utility::conversions::to_string_t("T_401K")) v = eAccountSubType::AccountSubType_T_401K;
        if (s == utility::conversions::to_string_t("T_403B")) v = eAccountSubType::AccountSubType_T_403B;
        if (s == utility::conversions::to_string_t("T_457B")) v = eAccountSubType::AccountSubType_T_457B;
        if (s == utility::conversions::to_string_t("T_529")) v = eAccountSubType::AccountSubType_T_529;
        if (s == utility::conversions::to_string_t("UGMA")) v = eAccountSubType::AccountSubType_UGMA;
        if (s == utility::conversions::to_string_t("UTMA")) v = eAccountSubType::AccountSubType_UTMA;
        if (s == utility::conversions::to_string_t("VARIABLE_ANNUITY")) v = eAccountSubType::AccountSubType_VARIABLE_ANNUITY;

        setValue(v);
    }
}

AccountSubType::eAccountSubType AccountSubType::getValue() const
{
   return m_value;
}

void AccountSubType::setValue(AccountSubType::eAccountSubType const value)
{
   m_value = value;
}


}
}
}
}


