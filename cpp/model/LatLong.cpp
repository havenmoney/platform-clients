/**
 * Haven Money API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.2.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "LatLong.h"

namespace dev {
namespace haven {
namespace client {
namespace model {




LatLong::LatLong()
{
    m_Latitude = 0.0;
    m_Longitude = 0.0;
}

LatLong::~LatLong()
{
}

void LatLong::validate()
{
    // TODO: implement validation
}

web::json::value LatLong::toJson() const
{
    web::json::value val = web::json::value::object();

    val[utility::conversions::to_string_t("latitude")] = ModelBase::toJson(m_Latitude);
    val[utility::conversions::to_string_t("longitude")] = ModelBase::toJson(m_Longitude);

    return val;
}

void LatLong::fromJson(const web::json::value& val)
{
    setLatitude(ModelBase::doubleFromJson(val.at(utility::conversions::to_string_t("latitude"))));
    setLongitude(ModelBase::doubleFromJson(val.at(utility::conversions::to_string_t("longitude"))));
}

void LatLong::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("latitude"), m_Latitude));
    multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("longitude"), m_Longitude));
}

void LatLong::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    setLatitude(ModelBase::doubleFromHttpContent(multipart->getContent(utility::conversions::to_string_t("latitude"))));
    setLongitude(ModelBase::doubleFromHttpContent(multipart->getContent(utility::conversions::to_string_t("longitude"))));
}

double LatLong::getLatitude() const
{
    return m_Latitude;
}

void LatLong::setLatitude(double value)
{
    m_Latitude = value;
    
}

double LatLong::getLongitude() const
{
    return m_Longitude;
}

void LatLong::setLongitude(double value)
{
    m_Longitude = value;
    
}

}
}
}
}


